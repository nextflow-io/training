#!/usr/bin/env nextflow

log.info """\
    __________________________________________________________________________________________________________________________________________________
    __________________________________________________________________________________________________________________________________________________
    >=>   >=>                       >=>                                         >=> >=>>=>                                >=>
    >=>  >=>                        >=>                           >=>>=>       >=>  >>   >=>                              >=>
    >=> >=>     >> >==>    >=> >=>  >=>  >=>   >==>    >==>>==>  >>   >=>     >=>   >>    >=> >> >==>    >=> >=>     >==> >=>  >=>   >==>    >==>>==>
    >>=>>        >=>     >=>   >=>  >=> >=>  >>   >=>   >=>  >=>     >=>     >=>    >==>>=>    >=>     >=>   >=>   >=>    >=> >=>  >>   >=>   >=>  >=>
    >=>  >=>     >=>    >=>    >=>  >=>=>    >>===>>=>  >=>  >=>    >=>     >=>     >>    >=>  >=>    >=>    >=>  >=>     >=>=>    >>===>>=>  >=>  >=>
    >=>   >=>    >=>     >=>   >=>  >=> >=>  >>         >=>  >=>  >=>      >=>      >>     >>  >=>     >=>   >=>   >=>    >=> >=>  >>         >=>  >=>
    >=>     >=> >==>      >==>>>==> >=>  >=>  >====>   >==>  >=> >======> >=>       >===>>=>  >==>      >==>>>==>    >==> >=>  >=>  >====>   >==>  >=>
    __________________________________________________________________________________________________________________________________________________
    __________________________________________________________________________________________________________________________________________________
"""
.stripIndent()

include { kraken2Flow } from './workflow.nf'

workflow {

    if(params.reads){
            reads_ch = Channel .fromFilePairs( params.reads, checkIfExists:true )
        } else {
            reads_ch = Channel.fromPath( params.sheet_csv )
                            .splitCsv(header:true)
                            .map { row-> tuple(row.sample_id, [file(row.fastq_1), file(row.fastq_2)]) }
        }
    kraken2Flow( params.bowtie2_index, params.kraken2_db, reads_ch )
}
